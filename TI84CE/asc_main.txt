/**
 * TI-84 CE ASCII Chart Viewer
 * 
 * This program displays all 256 ASCII/extended ASCII characters (0-255)
 * on the TI-84 CE calculator screen, allowing the user to identify
 * special characters like Ï€ and their corresponding codes.
 */

 #include <tice.h>
 #include <graphx.h>
 #include <keypadc.h>
 #include <string.h>
 #include <stdio.h>
 
 int main(void) {
     char buffer[10];
     int current_page = 0;
     int chars_per_page = 16; // Display 16 characters per page for readability
     int total_pages = 256 / chars_per_page;
     bool running = true;
     
     // Initialize graphics
     gfx_Begin();
     gfx_SetTextFGColor(0);
     gfx_SetTextBGColor(255);
     
     while (running) {
         // Clear the screen
         gfx_FillScreen(255); // White background
         
         // Draw page header
         gfx_PrintStringXY("ASCII Chart Viewer", 5, 5);
         sprintf(buffer, "Page %d/%d", current_page + 1, total_pages);
         gfx_PrintStringXY(buffer, 220, 5);
         gfx_PrintStringXY("Arrow Keys: Navigate", 5, 20);
         gfx_PrintStringXY("Clear: Exit", 5, 30);
         
         // Draw horizontal line
         gfx_SetColor(0);
         gfx_HorizLine(0, 40, 320);
         
         // Calculate starting character for this page
         int start_char = current_page * chars_per_page;
         
         // Display characters for this page
         for (int i = 0; i < chars_per_page; i++) {
             int char_code = start_char + i;
             int row = 50 + (i * 12);
             
             // Print character code
             sprintf(buffer, "%3d:", char_code);
             gfx_PrintStringXY(buffer, 10, row);
             
             // Print character hex code
             sprintf(buffer, "0x%02X", char_code);
             gfx_PrintStringXY(buffer, 60, row);
             
             // Draw a box for the character
             gfx_Rectangle(120, row - 2, 20, 12);
             
             // Print the actual character (if printable)
             if (char_code >= 32) {
                 buffer[0] = (char)char_code;
                 buffer[1] = '\0';
                 gfx_PrintStringXY(buffer, 130, row);
             } else {
                 gfx_PrintStringXY(".", 130, row); // Placeholder for control chars
             }
             
             // Print character name for common special characters
             if (char_code == 10) gfx_PrintStringXY("Line Feed", 150, row);
             else if (char_code == 13) gfx_PrintStringXY("Carriage Return", 150, row);
             else if (char_code == 32) gfx_PrintStringXY("Space", 150, row);
             else if (char_code == 127) gfx_PrintStringXY("Delete", 150, row);
             // Add more special character labels as needed
         }
         
         // Process key input
         kb_Scan();
         
         // Handle navigation
         if (kb_Data[7] & kb_Down && current_page < total_pages - 1) {
             current_page++;
             delay(200); // Debounce
         }
         if (kb_Data[7] & kb_Up && current_page > 0) {
             current_page--;
             delay(200); // Debounce
         }
         
         // Handle exit
         if (kb_Data[6] & kb_Clear) {
             running = false;
         }
         
         // Refresh the screen
         gfx_SwapDraw();
         delay(10); // Small delay for stability
     }
     
     // Clean up
     gfx_End();

     return 0;
 }
